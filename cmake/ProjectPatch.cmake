macro(GENERATE_PATCH_COMMAND PATCH_CMD PACKGE_NAME)
    set(${PACKAGE_NAME}_PATCH_FILES)
    if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}.patch)
        list(APPEND ${PACKAGE_NAME}_PATCH_FILES ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}.patch)
    endif()

    if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}-${CMAKE_SYSTEM_NAME}.patch)
        list(APPEND ${PACKAGE_NAME}_PATCH_FILES ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}-${CMAKE_SYSTEM_NAME}.patch)
    endif()

    if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}-${CMAKE_SYSTEM_PROCESSOR}.patch)
        list(APPEND ${PACKAGE_NAME}_PATCH_FILES ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}-${CMAKE_SYSTEM_PROCESSOR}.patch)
    endif()

    if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}-${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}.patch)
        list(APPEND ${PACKAGE_NAME}_PATCH_FILES ${CMAKE_CURRENT_LIST_DIR}/${PACKAGE_NAME}-${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}.patch)
    endif()

    foreach(file ${${PACKAGE_NAME}_PATCH_FILES})
        set(${PATCH_CMD} ${${PATCH_CMD}} "patch -p1 < ${file} $<SEMICOLON>")
    endforeach()

    if(${PATCH_CMD})
        set(${PATCH_CMD} bash -c "${${PATCH_CMD}}")
    endif()

endmacro(GENERATE_PATCH_COMMAND)




