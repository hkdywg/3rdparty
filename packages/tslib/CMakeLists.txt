set(TSLIB_VERSION 1.22)
set(TSLIB_PACKAGE_NAME tslib-${TSLIB_VERSION})
set(TSLIB_PACKAGE_PATH ${CMAKE_CURRENT_LIST_DIR}/${TSLIB_PACKAGE_NAME}.tar.bz2)

set(TSLIB_PREFIX ${THIRDPARTY_INSTALL_PATH})

GENERATE_PATCH_COMMAND(TSLIB_PACKAGE_PATCH_CMD ${TSLIB_PACKAGE_NAME})

find_package(TSLIB ${TSLIB_VERSION} EXACT QUIET)

set(TSLIB_TARGET tslib)

unset(TSLIB_AUTOGEN_COMMAND)
list(APPEND TSLIB_AUTOGEN_COMMAND "./autogen.sh")

unset(TSLIB_CFG_COMMAND)
list(APPEND TSLIB_CFG_COMMAND "./configure")
list(APPEND TSLIB_CFG_COMMAND "--host=${AUTOTOOL_HOST}")
list(APPEND TSLIB_CFG_COMMAND "--prefix=${CMAKE_INSTALL_PREFIX}")

unset(TSLIB_BUILD_COMMAND)
list(APPEND TSLIB_BUILD_COMMAND "$(MAKE) ${VERBOSE_MAKEFILE}")

unset(TSLIB_INSTALL_COMMAND)
list(APPEND TSLIB_INSTALL_COMMAND "$(MAKE) install")

ExternalProject_Add(
            ${TSLIB_PACKAGE_NAME}
            URL ${TSLIB_PACKAGE_PATH}
            PATCH_COMMAND "${TSLIB_PACKAGE_PATCH_CMD}"
            UPDATE_COMMAND bash -c "${TSLIB_AUTOGEN_COMMAND}"
            CONFIGURE_COMMAND  "${TSLIB_CFG_COMMAND}"
            BUILD_IN_SOURCE TRUE
            BUILD_COMMAND bash -c "${TSLIB_BUILD_COMMAND}"
            INSTALL_COMAND bash -c "${TSLIB_INSTALL_COMMAND}"
    )

add_custom_target(TSLIB DEPENDS ${TSLIB_TARGET})

set(TSLIB_TARGET ${TSLIB_TARGET} PARENT_SCOPE)
